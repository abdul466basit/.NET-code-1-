// <auto-generated />
using System;
using EFCrud.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCrud.Migrations
{
    [DbContext(typeof(EcommerceDBcontext))]
    partial class EcommerceDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCrud.Data.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customerId"));

                    b.Property<string>("customerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            customerId = 1,
                            customerName = "Alice Johnson"
                        },
                        new
                        {
                            customerId = 2,
                            customerName = "Bob Smith"
                        });
                });

            modelBuilder.Entity("EFCrud.Data.CustomerDetails", b =>
                {
                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerId");

                    b.ToTable("CustomersDetails");

                    b.HasData(
                        new
                        {
                            customerId = 1,
                            address = "123 Main St",
                            phoneNumber = "123-456-7890"
                        },
                        new
                        {
                            customerId = 2,
                            address = "456 Elm St",
                            phoneNumber = "987-654-3210"
                        });
                });

            modelBuilder.Entity("EFCrud.Data.Order", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderId"));

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("orderId");

                    b.HasIndex("customerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            orderId = 1,
                            customerId = 1,
                            orderDate = new DateTime(2024, 3, 2, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            orderId = 2,
                            customerId = 2,
                            orderDate = new DateTime(2024, 3, 2, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EFCrud.Data.OrderProduct", b =>
                {
                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("orderId", "productId");

                    b.HasIndex("productId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            orderId = 1,
                            productId = 1
                        },
                        new
                        {
                            orderId = 1,
                            productId = 2
                        },
                        new
                        {
                            orderId = 2,
                            productId = 2
                        });
                });

            modelBuilder.Entity("EFCrud.Data.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"));

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            productId = 1,
                            price = 1200.00m,
                            productname = "Laptop"
                        },
                        new
                        {
                            productId = 2,
                            price = 800.00m,
                            productname = "Smartphone"
                        });
                });

            modelBuilder.Entity("EFCrud.Data.CustomerDetails", b =>
                {
                    b.HasOne("EFCrud.Data.Customer", "Customer")
                        .WithOne("CustomerDetails")
                        .HasForeignKey("EFCrud.Data.CustomerDetails", "customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EFCrud.Data.Order", b =>
                {
                    b.HasOne("EFCrud.Data.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EFCrud.Data.OrderProduct", b =>
                {
                    b.HasOne("EFCrud.Data.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCrud.Data.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EFCrud.Data.Customer", b =>
                {
                    b.Navigation("CustomerDetails")
                        .IsRequired();

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EFCrud.Data.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("EFCrud.Data.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
